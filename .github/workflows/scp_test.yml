name: Build Scp Client

on:
  push:
    branches:
      - "release_test"
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            file_extension: ".exe"
            file_name: "latest.exe"
            build_arg: "--win --x64"
        
    
    # 这里是作业级别的条件，用于筛选要运行的作业
    runs-on: ${{ matrix.os }}

    # 将release_test分支的代码检出（即复制）到 GitHub Actions 的运行环境中。
    steps:      
      # 上传文件到远程服务器
      - name: Copy files to remote server
        if: ${{ runner.os == 'Windows' }}
        continue-on-error: false
        timeout-minutes: 15
        env:
          SCP_PASSWORD: ${{ secrets.WIN_SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.WIN_SERVER_IP }}
          REMOTE_USER: ${{ secrets.WIN_SERVER_USER }}
          REMOTE_PATH: "${{ secrets.REMOTE_SIGN_PATH }}/test.exe"
          REMOTE_OSS: ${{ secrets.REMOTE_SIGN_SCRIPT_OSS }}
          HOST_KEY: ${{ secrets.HOST_KEY }}
          FILE_TO_UPLOAD: "test.exe"
          REMOTE_SCRIPT_PATH_1: "${{ secrets.REMOTE_SIGN_SCRIPT }} --alg SHA-1 ${{ secrets.REMOTE_SIGN_PATH }}/test.exe"
          REMOTE_SCRIPT_PATH_2: "${{ secrets.REMOTE_SIGN_SCRIPT }} --alg SHA-256 ${{ secrets.REMOTE_SIGN_PATH }}/test.exe"
          LOCAL_DOWNLOAD_PATH: "test.exe"
        run: |
          winscp.com /log=winscp.log /command `
            "option batch abort" `
            "option confirm off" `
            "open scp://${{ env.REMOTE_USER }}:${{ env.SCP_PASSWORD }}@${{ env.REMOTE_HOST }} -oPort=6000 -hostkey=*" `
            "call ${{ env.REMOTE_OSS }} oss://${{ secrets.BUCKET_NAME }}/download/${{ github.event.inputs.version }}/temp/${{ secrets.PRODUCT_APP_NAME }}-${{ github.event.inputs.version }}.exe ${env:REMOTE_PATH}" `
            "call ${env:REMOTE_SCRIPT_PATH_1}" `
            "call ${env:REMOTE_SCRIPT_PATH_2}" `
            "call ${{ env.REMOTE_OSS }} ${env:REMOTE_PATH} oss://${{ secrets.BUCKET_NAME }}/download/${{ github.event.inputs.version }}/${{ secrets.PRODUCT_APP_NAME }}-${{ github.event.inputs.version }}.exe " `
            "exit"

    
      # 发送到飞书
      - name: Send feishu message
        uses: foxundermoon/feishu-action@v2
        if: always()
        with:
          url: ${{ secrets.FEISHU_WEBHOOK }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: "${{ secrets.PRODUCT_APP_NAME }} ${{ github.event.inputs.version }} ${{ runner.os }} ${{ matrix.arch }} 打包${{ job.status == 'success' && '完成' || '失败' }}通知"
                content:
                - - tag: text
                    text: "任务id："
                  - tag: a
                    text: "Pre-${{ github.event.inputs.version }}"
                    href: "https://github.com/juliet0416/cicd-test/actions/runs/${{ github.run_id }}"
                - - tag: text
                    text: "状态: ${{ job.status == 'success' && '✅ 成功' || '❌ 失败' }}"
                - - tag: text
                    text: "下载地址：${{secrets.CDN_URL}}/download/${{ github.event.inputs.version }}/${{ secrets.PRODUCT_APP_NAME }}-${{ github.event.inputs.version }}${{ matrix.file_extension }}"

      
